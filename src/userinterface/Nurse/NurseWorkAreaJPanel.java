/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Nurse;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientTreatmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Panel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rutugawad
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private NurseOrganization nurseOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form NurseWorkAreaJPanel
     * @param userProcessContainer
     * @param account
     * @param organization
     * @param enterprise
     * @param business
     */
    public NurseWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.nurseOrganization = (NurseOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;

        populateRequestTable(); // Populate the table with requests
        
    }

   
public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblWorkRequest1.getModel();
        model.setRowCount(0);

        // Fetch work requests from NurseOrganization's WorkQueue
    for (WorkRequest request : nurseOrganization.getWorkQueue().getWorkRequests()) {
        if (request instanceof PatientTreatmentWorkRequest) {
            PatientTreatmentWorkRequest treatmentRequest = (PatientTreatmentWorkRequest) request;
            Object[] row = new Object[8];
            row[0] = treatmentRequest.getRegistrationDate();
            row[1] = treatmentRequest.getPatient().getId();
            row[2] = treatmentRequest.getPatient().getFirstName() + " " + treatmentRequest.getPatient().getLastName();
            row[3] = treatmentRequest.getReasonForVisit();
            row[4] = treatmentRequest.getAssignedDoctor();
            row[5] = treatmentRequest.getLabAssistant();
            row[6] = treatmentRequest.getLabResult();
            row[7] = treatmentRequest.getStatus();

            model.addRow(row);
            }
        }

        // Add a table row sorter
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblWorkRequest1.setRowSorter(sorter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWorkAreaForNurse = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblWorkRequest1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(106, 182, 186));
        setLayout(null);

        lblWorkAreaForNurse.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblWorkAreaForNurse.setForeground(new java.awt.Color(204, 0, 0));
        lblWorkAreaForNurse.setText("WORK-AREA FOR NURSE");
        add(lblWorkAreaForNurse);
        lblWorkAreaForNurse.setBounds(490, 50, 380, 21);

        tblWorkRequest1.setBackground(new java.awt.Color(146, 220, 220));
        tblWorkRequest1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        tblWorkRequest1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Registration Date", "Patient Id", "Patient Name", "Illness", "Assigned Doctor", "Lab Assistant", "Lab Result", "Treatment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblWorkRequest1);

        add(jScrollPane2);
        jScrollPane2.setBounds(170, 140, 920, 160);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/nurse4.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, -80, 420, 570);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblWorkAreaForNurse;
    private javax.swing.JTable tblWorkRequest1;
    // End of variables declaration//GEN-END:variables
}
