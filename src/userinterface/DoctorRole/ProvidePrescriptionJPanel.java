/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Organization.PharmacyOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientTreatmentWorkRequest;
import Business.WorkQueue.PharmacyWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author VIRAJ
 */
public class ProvidePrescriptionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private PatientTreatmentWorkRequest request;

    /**
     * Creates new form ProvidePrescriptionJPanel
     */
    public ProvidePrescriptionJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, PatientTreatmentWorkRequest workRequest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.request = workRequest;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProvidePrescription = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblAssignedDoctorInformation = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblPrescribeAndFeedback = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPrescription = new javax.swing.JTextArea();
        lblPatientMedicalCondition = new javax.swing.JLabel();
        txtMedicalCondition = new javax.swing.JTextField();
        txtAssignedDoctor = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(173, 234, 203));
        setEnabled(false);
        setLayout(null);

        lblProvidePrescription.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblProvidePrescription.setForeground(new java.awt.Color(204, 0, 0));
        lblProvidePrescription.setText("Provide Prescription");
        add(lblProvidePrescription);
        lblProvidePrescription.setBounds(426, 27, 230, 21);

        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel6.setText("PATIENT INFORMATION");
        add(jLabel6);
        jLabel6.setBounds(401, 109, 200, 16);

        txtFirstName.setEditable(false);
        add(txtFirstName);
        txtFirstName.setBounds(326, 230, 131, 23);

        lblFirstName.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblFirstName.setText("First Name:");
        add(lblFirstName);
        lblFirstName.setBounds(202, 234, 88, 20);

        txtAge.setEditable(false);
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        add(txtAge);
        txtAge.setBounds(635, 274, 131, 23);

        lblLastName.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblLastName.setText("Last Name :");
        add(lblLastName);
        lblLastName.setBounds(513, 234, 88, 17);

        txtLastName.setEditable(false);
        add(txtLastName);
        txtLastName.setBounds(635, 227, 131, 23);

        lblAssignedDoctorInformation.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblAssignedDoctorInformation.setText("Assigned Doctor Information:");
        add(lblAssignedDoctorInformation);
        lblAssignedDoctorInformation.setBounds(66, 305, 224, 20);

        lblAge.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblAge.setText("Age :");
        add(lblAge);
        lblAge.setBounds(561, 278, 40, 17);

        lblPrescribeAndFeedback.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblPrescribeAndFeedback.setText("PRESCRIPTION AND FEEDBACK");
        add(lblPrescribeAndFeedback);
        lblPrescribeAndFeedback.setBounds(66, 371, 200, 20);

        txtPrescription.setColumns(20);
        txtPrescription.setRows(5);
        jScrollPane1.setViewportView(txtPrescription);

        add(jScrollPane1);
        jScrollPane1.setBounds(296, 400, 410, 120);

        lblPatientMedicalCondition.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        lblPatientMedicalCondition.setText("Patient Medical Condition:");
        add(lblPatientMedicalCondition);
        lblPatientMedicalCondition.setBounds(82, 275, 208, 20);

        txtMedicalCondition.setEditable(false);
        add(txtMedicalCondition);
        txtMedicalCondition.setBounds(327, 271, 130, 23);

        txtAssignedDoctor.setEditable(false);
        add(txtAssignedDoctor);
        txtAssignedDoctor.setBounds(326, 303, 131, 23);

        btnSubmit.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(456, 556, 110, 30);

        btnBack.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(25, 27, 90, 21);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled design.jpg"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(2, -3, 940, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        String prescription = txtPrescription.getText();
    if (prescription.equals("")) {
        JOptionPane.showMessageDialog(null, "Prescription is mandatory");
        return;
    } else {
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to proceed?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            // Update the current work request
            request.setPrescription(prescription);
            request.setStatus("Prescription Provided");

            // Create a new PharmacyWorkRequest
            PharmacyWorkRequest pharmacyRequest = new PharmacyWorkRequest(prescription, request.getPatient());
            pharmacyRequest.setRequestId("PH-" + System.currentTimeMillis());
            pharmacyRequest.setSender(userAccount);
            pharmacyRequest.setMedication(prescription); // Add the prescription as the medication
            pharmacyRequest.setPatient(request.getPatient());
            pharmacyRequest.setStatus("Pending");
            
            // Add the PharmacyWorkRequest to the PharmacyOrganization's work queue
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof PharmacyOrganization) {
                    ((PharmacyOrganization) org).getWorkQueue().getWorkRequests().add(pharmacyRequest);
                    break;
                }
            }

            JOptionPane.showMessageDialog(null, "Prescription submitted successfully");
            btnSubmit.setEnabled(false);
        }
    }   



//        String prescription = txtPrescription.getText();
//        if (prescription.equals("")) {
//            JOptionPane.showMessageDialog(null, "Prescription is mandatory");
//            return;
//        } else {
//            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to proceed?");
//            if (dialogResult == JOptionPane.YES_OPTION) {
//                request.setPrescription(prescription);
//                request.setStatus("Prescription Provided");
//                JOptionPane.showMessageDialog(null, "Prescription submitted successfully");
//                btnSubmit.setEnabled(false);
//                
//            }
      


   
    }//GEN-LAST:event_btnSubmitActionPerformed

    
    private void populateTable(PatientTreatmentWorkRequest request) {
    // Set the Patient's Information
    txtFirstName.setText(request.getPatient().getFirstName());  // Patient's first name
    txtLastName.setText(request.getPatient().getLastName());    // Patient's last name
    txtAge.setText(String.valueOf(request.getPatient().getAge()));  // Patient's age
    txtMedicalCondition.setText(request.getReasonForVisit());  // Reason for visit (medical condition)
    
    // Set Prescription Information
    txtPrescription.setText(request.getPrescription());  // Medication prescribed from the treatment work request
    
    // Retrieve the assigned doctor from the PatientTreatmentWorkRequest
    UserAccount assignedDoctor = request.getAssignedDoctor();  // Assigned doctor from the work request
    if (assignedDoctor != null) {
        txtAssignedDoctor.setText(assignedDoctor.getEmployee().getEmployeename());  // Doctor's name
    } else {
        txtAssignedDoctor.setText("N/A");  // If no doctor assigned, show "N/A"
    }
}


    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAssignedDoctorInformation;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPatientMedicalCondition;
    private javax.swing.JLabel lblPrescribeAndFeedback;
    private javax.swing.JLabel lblProvidePrescription;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAssignedDoctor;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMedicalCondition;
    private javax.swing.JTextArea txtPrescription;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        txtFirstName.setText(request.getPatient().getFirstName());
        txtLastName.setText(request.getPatient().getLastName());
       // txtBirthDate1.setText(String.valueOf(request.getPatient().getDateOfBirth()));
        txtAge.setText(String.valueOf(request.getPatient().getAge()));
        txtMedicalCondition.setText(request.getReasonForVisit());
        txtAssignedDoctor.setText(request.getAssignedDoctor().getEmployee().getEmployeename());

    }
}
